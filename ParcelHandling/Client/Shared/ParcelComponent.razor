@using ParcelHandling.Shared;
@using System.Globalization;
@inject HttpClient Http

@if (Parcel != null)
{
    <div class="card" style="width: 18rem;">
        <img src="parcel.png" class="card-img-top" alt="Parcel">
        <div class="card-body">
            <h5 class="card-title">Parcel <strong>@Parcel.Id</strong></h5>
            <table class="table">
                <tbody>
                    <tr>
                        <th scope="row">Recipient</th>
                        <td>
                            @Parcel.Receipient?.Name<br>
                            @Parcel.Receipient?.Address?.Street @Parcel.Receipient?.Address?.HouseNumber<br>
                            @Parcel.Receipient?.Address?.PostalCode @Parcel.Receipient?.Address?.City
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">Weight</th>
                        <td>@Parcel.Weight</td>
                    </tr>
                    <tr>
                        <th scope="row">Value</th>
                        <td>@Parcel.Value</td>
                    </tr>
                </tbody>
            </table>

            @if (Actions != null) {

                foreach (var action in Actions) {

                    <a @onclick=@(e => Handle(action.Result)) class="btn btn-primary">@action.Action</a>
                }
            }

        </div>
    </div>
}

@code {

    [Parameter]
    public Parcel? Parcel { get; set; }

    [Parameter]
    public IEnumerable<HandlingAction>? Actions { get; set; }

    [Parameter]
    public EventCallback OnHandled { get; set; }

    private async Task Handle(ParcelState state)
    {
        if (Parcel != null)
        {
            try
            {
                Parcel.State = state;
                await Http.PutAsJsonAsync($"Parcel", Parcel);
            }
            catch (Exception)
            {
                Console.WriteLine("An error occured while updating a parcel");
            }

            await OnHandled.InvokeAsync();
        }
    }
}
